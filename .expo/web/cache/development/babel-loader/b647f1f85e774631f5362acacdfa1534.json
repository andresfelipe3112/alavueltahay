{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useCallback, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport GlobalVars from \"../../global/globalVars\";\nimport StoreContext from \"../../helpers/globalStates\";\nimport recoveringStateLocation from \"../../utils/useGPS\";\nimport useModal from \"../../utils/useModal\";\nimport StatusBarComponent from \"../../components/atoms/StatusBar\";\nimport InputSearch from \"../../components/molecules/InputSearch\";\nimport Header from \"../../components/organisms/Header\";\nimport MapViewComponent from \"../../components/organisms/MapView\";\nimport EntrepreneursGrid from \"../../components/organisms/EntrepreneursGrid\";\nimport ScrollView from \"../../components/templates/ScrollView\";\nimport WrappingViews from \"../../components/templates/WrappingViews\";\nimport Styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = Styles;\n\nvar EntrepreneursScreen = function EntrepreneursScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(StoreContext.SecurityContext),\n      _jwt = _useContext._jwt;\n\n  var _useContext2 = useContext(StoreContext.UserContext),\n      user = _useContext2.user;\n\n  var _useModal = useModal(),\n      isOpenWelcome = _useModal.isShowing,\n      showWelcome = _useModal.toggle;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ToRandomDispatch = _useState2[0],\n      setToRandomDispatch = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gps = _useState4[0],\n      setGps = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterText = _useState6[0],\n      setFilterText = _useState6[1];\n\n  useEffect(function () {}, []);\n  useFocusEffect(useCallback(function () {\n    BackHandlerProcess();\n    getRandomNumberDispatch();\n    captureGps();\n  }, []));\n\n  var BackHandlerProcess = function BackHandlerProcess() {\n    var backAction = function backAction() {\n      navigation.goBack();\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      return backHandler.remove();\n    };\n  };\n\n  var getRandomNumberDispatch = function getRandomNumberDispatch() {\n    var attrTemp = Math.random();\n    setToRandomDispatch(attrTemp);\n  };\n\n  var captureGps = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _recover, _recover$coords, _recover2, _recover2$coords;\n\n      var recover = yield recoveringStateLocation();\n\n      while (recover === \"error\" || !recover) {\n        recover = yield recoveringStateLocation();\n      }\n\n      setGps({\n        latitude: (_recover = recover) == null ? void 0 : (_recover$coords = _recover.coords) == null ? void 0 : _recover$coords.latitude,\n        longitude: (_recover2 = recover) == null ? void 0 : (_recover2$coords = _recover2.coords) == null ? void 0 : _recover2$coords.longitude\n      });\n    });\n\n    return function captureGps() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(WrappingViews, {\n    children: [_jsx(StatusBarComponent, {}), _jsx(Header, {\n      navigation: navigation,\n      user: user,\n      _jwt: _jwt,\n      title: \"Comercios\",\n      ToRandomDispatch: ToRandomDispatch,\n      isJustTitle: true\n    }), _jsxs(ScrollView, {\n      style: styles.scrolling,\n      contentContainerStyle: styles.wrapScrollView,\n      colorScrollBar: GlobalVars.orange,\n      children: [_jsxs(View, {\n        style: styles.mapView,\n        children: [!gps && _jsx(ActivityIndicator, {\n          color: GlobalVars.orange,\n          size: \"large\"\n        }), gps && _jsx(MapViewComponent, {\n          coords: gps || null,\n          onChangeCoords: setGps\n        })]\n      }), _jsx(View, {\n        style: styles.searchView,\n        children: _jsx(InputSearch, {\n          label: \"Buscar negocios\",\n          iconName: filterText ? \"x\" : \"search\",\n          textvariable: filterText || \"\",\n          setValue: function setValue(val) {\n            return setFilterText(val);\n          },\n          bgBlue: true\n        })\n      }), _jsx(EntrepreneursGrid, {\n        jwt: _jwt,\n        filterText: filterText\n      })]\n    })]\n  });\n};\n\nexport default EntrepreneursScreen;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useContext","useFocusEffect","GlobalVars","StoreContext","recoveringStateLocation","useModal","StatusBarComponent","InputSearch","Header","MapViewComponent","EntrepreneursGrid","ScrollView","WrappingViews","Styles","styles","EntrepreneursScreen","navigation","SecurityContext","_jwt","UserContext","user","isOpenWelcome","isShowing","showWelcome","toggle","ToRandomDispatch","setToRandomDispatch","gps","setGps","filterText","setFilterText","BackHandlerProcess","getRandomNumberDispatch","captureGps","backAction","goBack","backHandler","BackHandler","addEventListener","remove","attrTemp","Math","random","recover","latitude","coords","longitude","scrolling","wrapScrollView","orange","mapView","searchView","val"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/screens/Entrepreneurs/index.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useContext } from \"react\";\n\nimport { View, ActivityIndicator, BackHandler } from \"react-native\";\n\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nimport GlobalVars from \"../../global/globalVars\";\n\nimport StoreContext from \"../../helpers/globalStates\";\n\nimport recoveringStateLocation from \"../../utils/useGPS\";\n\nimport useModal from \"../../utils/useModal\";\n\n/** Import Componentes Custom */\nimport StatusBarComponent from \"../../components/atoms/StatusBar\";\nimport InputSearch from \"../../components/molecules/InputSearch\";\nimport Header from \"../../components/organisms/Header\";\nimport MapViewComponent from \"../../components/organisms/MapView\";\nimport EntrepreneursGrid from \"../../components/organisms/EntrepreneursGrid\";\nimport ScrollView from \"../../components/templates/ScrollView\";\nimport WrappingViews from \"../../components/templates/WrappingViews\";\n\n/** Styles */\nimport Styles from \"./style\";\n\nconst styles = Styles;\nconst EntrepreneursScreen = ({ navigation }) => {\n  const { _jwt } = useContext(StoreContext.SecurityContext);\n  const { user } = useContext(StoreContext.UserContext);\n\n  const { isShowing: isOpenWelcome, toggle: showWelcome } = useModal();\n\n  const [ToRandomDispatch, setToRandomDispatch] = useState(null);\n\n  const [gps, setGps] = useState(null);\n  const [filterText, setFilterText] = useState(\"\");\n\n  useEffect(() => {}, []);\n\n  useFocusEffect(\n    useCallback(() => {\n      /** Backhandler process Android -> back button */\n      BackHandlerProcess();\n\n      getRandomNumberDispatch();\n\n      captureGps();\n    }, [])\n  );\n\n  const BackHandlerProcess = () => {\n    /** Android no return Login */\n    const backAction = () => {\n      navigation.goBack();\n      return true;\n    };\n    const backHandler = BackHandler.addEventListener(\n      \"hardwareBackPress\",\n      backAction\n    );\n    return () => backHandler.remove();\n  };\n\n  const getRandomNumberDispatch = () => {\n    // random vals process for generate token for wish\n    const attrTemp = Math.random();\n    setToRandomDispatch(attrTemp);\n  };\n\n  const captureGps = async () => {\n    let recover = await recoveringStateLocation();\n    while (recover === \"error\" || !recover) {\n      recover = await recoveringStateLocation();\n    }\n    setGps({\n      latitude: recover?.coords?.latitude,\n      longitude: recover?.coords?.longitude,\n    });\n  };\n\n  return (\n    <WrappingViews>\n      <StatusBarComponent />\n      <Header\n        navigation={navigation}\n        user={user}\n        _jwt={_jwt}\n        title=\"Comercios\"\n        ToRandomDispatch={ToRandomDispatch}\n        isJustTitle\n      />\n\n      <ScrollView\n        style={styles.scrolling}\n        contentContainerStyle={styles.wrapScrollView}\n        colorScrollBar={GlobalVars.orange}\n      >\n        <View style={styles.mapView}>\n          {!gps && <ActivityIndicator color={GlobalVars.orange} size=\"large\" />}\n          {gps && (\n            <MapViewComponent coords={gps || null} onChangeCoords={setGps} />\n          )}\n        </View>\n\n        <View style={styles.searchView}>\n          <InputSearch\n            label=\"Buscar negocios\"\n            iconName={filterText ? \"x\" : \"search\"}\n            textvariable={filterText || \"\"}\n            setValue={(val) => setFilterText(val)}\n            bgBlue\n          />\n        </View>\n\n        <EntrepreneursGrid jwt={_jwt} filterText={filterText} />\n      </ScrollView>\n    </WrappingViews>\n  );\n};\n\nexport default EntrepreneursScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}