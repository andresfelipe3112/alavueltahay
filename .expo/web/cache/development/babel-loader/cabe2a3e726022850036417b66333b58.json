{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport GlobalVars from \"../../global/globalVars\";\nimport useFetch from \"../../utils/useFetch\";\nimport randomToken from \"../randomToken\";\n\nvar RecoverPass = function () {\n  var _ref = _asyncToGenerator(function* (data) {\n    var API_URL_UPDATE_PASS = GlobalVars.urlapi + \"/user/update-account\";\n\n    try {\n      var newHashTmp = yield randomToken(8);\n\n      if (data) {\n        var res = yield useFetch.fetchPut(API_URL_UPDATE_PASS, {\n          type: (data == null ? void 0 : data.type) || \"1\",\n          identifier: data == null ? void 0 : data.email,\n          newPassword: (data == null ? void 0 : data.newPass) || newHashTmp,\n          newPasswordConfirmation: (data == null ? void 0 : data.newPassConfirm) || null,\n          currentPassword: (data == null ? void 0 : data.currentPass) || null\n        });\n        return res;\n      }\n\n      return false;\n    } catch (e) {\n      return false;\n    }\n  });\n\n  return function RecoverPass(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar NavigateScreen = function NavigateScreen(navigation, screen) {\n  navigation.navigate(screen);\n};\n\nexport default {\n  RecoverPass: RecoverPass,\n  NavigateScreen: NavigateScreen\n};","map":{"version":3,"names":["GlobalVars","useFetch","randomToken","RecoverPass","data","API_URL_UPDATE_PASS","urlapi","newHashTmp","res","fetchPut","type","identifier","email","newPassword","newPass","newPasswordConfirmation","newPassConfirm","currentPassword","currentPass","e","NavigateScreen","navigation","screen","navigate"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/helpers/oAuth/index.js"],"sourcesContent":["import GlobalVars from \"../../global/globalVars\";\n\nimport useFetch from \"../../utils/useFetch\";\n\nimport randomToken from \"../randomToken\";\n\nconst RecoverPass = async (data) => {\n  const API_URL_UPDATE_PASS = `${GlobalVars.urlapi}/user/update-account`;\n  try {\n    const newHashTmp = await randomToken(8);\n    if (data) {\n      const res = await useFetch.fetchPut(API_URL_UPDATE_PASS, {\n        type: data?.type || \"1\",\n        identifier: data?.email,\n        newPassword: data?.newPass || newHashTmp,\n        newPasswordConfirmation: data?.newPassConfirm || null,\n        currentPassword: data?.currentPass || null,\n      });\n\n      return res;\n    }\n    return false;\n  } catch (e) {\n    // console.log(e);\n    return false;\n  }\n};\n\nconst NavigateScreen = (navigation, screen) => {\n  navigation.navigate(screen);\n};\n\nexport default { RecoverPass, NavigateScreen };\n"],"mappings":";AAAA,OAAOA,UAAP;AAEA,OAAOC,QAAP;AAEA,OAAOC,WAAP;;AAEA,IAAMC,WAAW;EAAA,6BAAG,WAAOC,IAAP,EAAgB;IAClC,IAAMC,mBAAmB,GAAML,UAAU,CAACM,MAAjB,yBAAzB;;IACA,IAAI;MACF,IAAMC,UAAU,SAASL,WAAW,CAAC,CAAD,CAApC;;MACA,IAAIE,IAAJ,EAAU;QACR,IAAMI,GAAG,SAASP,QAAQ,CAACQ,QAAT,CAAkBJ,mBAAlB,EAAuC;UACvDK,IAAI,EAAE,CAAAN,IAAI,QAAJ,YAAAA,IAAI,CAAEM,IAAN,KAAc,GADmC;UAEvDC,UAAU,EAAEP,IAAF,oBAAEA,IAAI,CAAEQ,KAFqC;UAGvDC,WAAW,EAAE,CAAAT,IAAI,QAAJ,YAAAA,IAAI,CAAEU,OAAN,KAAiBP,UAHyB;UAIvDQ,uBAAuB,EAAE,CAAAX,IAAI,QAAJ,YAAAA,IAAI,CAAEY,cAAN,KAAwB,IAJM;UAKvDC,eAAe,EAAE,CAAAb,IAAI,QAAJ,YAAAA,IAAI,CAAEc,WAAN,KAAqB;QALiB,CAAvC,CAAlB;QAQA,OAAOV,GAAP;MACD;;MACD,OAAO,KAAP;IACD,CAdD,CAcE,OAAOW,CAAP,EAAU;MAEV,OAAO,KAAP;IACD;EACF,CApBgB;;EAAA,gBAAXhB,WAAW;IAAA;EAAA;AAAA,GAAjB;;AAsBA,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAaC,MAAb,EAAwB;EAC7CD,UAAU,CAACE,QAAX,CAAoBD,MAApB;AACD,CAFD;;AAIA,eAAe;EAAEnB,WAAW,EAAXA,WAAF;EAAeiB,cAAc,EAAdA;AAAf,CAAf"},"metadata":{},"sourceType":"module"}