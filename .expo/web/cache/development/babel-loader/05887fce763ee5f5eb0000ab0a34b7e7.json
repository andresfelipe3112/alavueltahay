{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport _react, { useMemo, useRef } from \"react\";\n\nfunction $e92117d6e5313ef8e7c10fac1de193ce$var$Item(props) {\n  return null;\n}\n\n$e92117d6e5313ef8e7c10fac1de193ce$var$Item.getCollectionNode = function* getCollectionNode(props) {\n  var childItems = props.childItems,\n      title = props.title,\n      children = props.children;\n  var rendered = props.title || props.children;\n  var textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  if (!textValue) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered: rendered,\n    textValue: textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: $e92117d6e5313ef8e7c10fac1de193ce$var$hasChildItems(props),\n    childNodes: function* childNodes() {\n      if (childItems) {\n        for (var child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        var items = [];\n\n        _react.Children.forEach(children, function (child) {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction $e92117d6e5313ef8e7c10fac1de193ce$var$hasChildItems(props) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && _react.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nexport var Item = $e92117d6e5313ef8e7c10fac1de193ce$var$Item;\n\nfunction $b2e76f05d3356a2e1df6ac80570fcd9$var$Section(props) {\n  return null;\n}\n\n$b2e76f05d3356a2e1df6ac80570fcd9$var$Section.getCollectionNode = function* getCollectionNode(props) {\n  var children = props.children,\n      title = props.title,\n      items = props.items;\n  yield {\n    type: 'section',\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    childNodes: function* childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n\n        for (var item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        var _items = [];\n\n        _react.Children.forEach(children, function (child) {\n          _items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* _items;\n      }\n    }\n  };\n};\n\nexport var Section = $b2e76f05d3356a2e1df6ac80570fcd9$var$Section;\n\nvar $f8429209754fda4b9142d514065f4$export$CollectionBuilder = function () {\n  function $f8429209754fda4b9142d514065f4$export$CollectionBuilder() {\n    _classCallCheck(this, $f8429209754fda4b9142d514065f4$export$CollectionBuilder);\n\n    this.context = void 0;\n    this.cache = new WeakMap();\n  }\n\n  _createClass($f8429209754fda4b9142d514065f4$export$CollectionBuilder, [{\n    key: \"build\",\n    value: function build(props, context) {\n      var _this = this;\n\n      this.context = context;\n      return $f8429209754fda4b9142d514065f4$var$iterable(function () {\n        return _this.iterateCollection(props);\n      });\n    }\n  }, {\n    key: \"iterateCollection\",\n    value: function* iterateCollection(props) {\n      var children = props.children,\n          items = props.items;\n\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n\n        for (var item of props.items) {\n          yield* this.getFullNode({\n            value: item\n          }, {\n            renderer: children\n          });\n        }\n      } else {\n        var _items2 = [];\n\n        _react.Children.forEach(children, function (child) {\n          _items2.push(child);\n        });\n\n        var index = 0;\n\n        for (var _item of _items2) {\n          var nodes = this.getFullNode({\n            element: _item,\n            index: index\n          }, {});\n\n          for (var node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(item, partialNode, state, parentKey) {\n      if (item.key != null) {\n        return item.key;\n      }\n\n      if (partialNode.type === 'cell' && partialNode.key != null) {\n        return \"\" + parentKey + partialNode.key;\n      }\n\n      var v = partialNode.value;\n\n      if (v != null) {\n        var _v$key;\n\n        var key = (_v$key = v.key) != null ? _v$key : v.id;\n\n        if (key == null) {\n          throw new Error('No key found for item');\n        }\n\n        return key;\n      }\n\n      return parentKey ? parentKey + \".\" + partialNode.index : \"$.\" + partialNode.index;\n    }\n  }, {\n    key: \"getChildState\",\n    value: function getChildState(state, partialNode) {\n      return {\n        renderer: partialNode.renderer || state.renderer\n      };\n    }\n  }, {\n    key: \"getFullNode\",\n    value: function* getFullNode(partialNode, state, parentKey, parentNode) {\n      var element = partialNode.element;\n\n      if (!element && partialNode.value && state && state.renderer) {\n        var cached = this.cache.get(partialNode.value);\n\n        if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n          cached.index = partialNode.index;\n          yield cached;\n          return;\n        }\n\n        element = state.renderer(partialNode.value);\n      }\n\n      if (_react.isValidElement(element)) {\n        var type = element.type;\n\n        if (typeof type !== 'function' || typeof type.getCollectionNode !== 'function') {\n          var name = typeof element.type === 'function' ? element.type.name : element.type;\n          throw new Error(\"Unknown element <\" + name + \"> in collection.\");\n        }\n\n        var childNodes = type.getCollectionNode(element.props, this.context);\n        var index = partialNode.index;\n        var result = childNodes.next();\n\n        while (!result.done && result.value) {\n          var childNode = result.value;\n          partialNode.index = index;\n          var nodes = this.getFullNode(_babelRuntimeHelpersEsmExtends({}, childNode, {\n            key: childNode.element ? null : this.getKey(element, partialNode, state, parentKey),\n            index: index,\n            wrapper: $f8429209754fda4b9142d514065f4$var$compose(partialNode.wrapper, childNode.wrapper)\n          }), this.getChildState(state, childNode), parentKey ? \"\" + parentKey + element.key : element.key, parentNode);\n\n          var children = _toConsumableArray(nodes);\n\n          for (var _node of children) {\n            _node.value = childNode.value || partialNode.value;\n\n            if (_node.value) {\n              this.cache.set(_node.value, _node);\n            }\n\n            if (partialNode.type && _node.type !== partialNode.type) {\n              throw new Error(\"Unsupported type <\" + $f8429209754fda4b9142d514065f4$var$capitalize(_node.type) + \"> in <\" + $f8429209754fda4b9142d514065f4$var$capitalize(parentNode.type) + \">. Only <\" + $f8429209754fda4b9142d514065f4$var$capitalize(partialNode.type) + \"> is supported.\");\n            }\n\n            index++;\n            yield _node;\n          }\n\n          result = childNodes.next(children);\n        }\n\n        return;\n      }\n\n      if (partialNode.key == null) {\n        return;\n      }\n\n      var builder = this;\n      var node = {\n        type: partialNode.type,\n        props: partialNode.props,\n        key: partialNode.key,\n        parentKey: parentNode ? parentNode.key : null,\n        value: partialNode.value,\n        level: parentNode ? parentNode.level + 1 : 0,\n        index: partialNode.index,\n        rendered: partialNode.rendered,\n        textValue: partialNode.textValue,\n        'aria-label': partialNode['aria-label'],\n        wrapper: partialNode.wrapper,\n        shouldInvalidate: partialNode.shouldInvalidate,\n        hasChildNodes: partialNode.hasChildNodes,\n        childNodes: $f8429209754fda4b9142d514065f4$var$iterable(function* () {\n          if (!partialNode.hasChildNodes) {\n            return;\n          }\n\n          var index = 0;\n\n          for (var child of partialNode.childNodes()) {\n            if (child.key != null) {\n              child.key = \"\" + node.key + child.key;\n            }\n\n            child.index = index;\n\n            var _nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n\n            for (var _node2 of _nodes) {\n              index++;\n              yield _node2;\n            }\n          }\n        })\n      };\n      yield node;\n    }\n  }]);\n\n  return $f8429209754fda4b9142d514065f4$export$CollectionBuilder;\n}();\n\nfunction $f8429209754fda4b9142d514065f4$var$iterable(iterator) {\n  var cache = [];\n  var iterable = null;\n  return _defineProperty({}, Symbol.iterator, function* () {\n    for (var item of cache) {\n      yield item;\n    }\n\n    if (!iterable) {\n      iterable = iterator();\n    }\n\n    for (var _item2 of iterable) {\n      cache.push(_item2);\n      yield _item2;\n    }\n  });\n}\n\nfunction $f8429209754fda4b9142d514065f4$var$compose(outer, inner) {\n  if (outer && inner) {\n    return function (element) {\n      return outer(inner(element));\n    };\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction $f8429209754fda4b9142d514065f4$var$capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nexport function useCollection(props, factory, context, invalidators) {\n  if (invalidators === void 0) {\n    invalidators = [];\n  }\n\n  var builder = useMemo(function () {\n    return new $f8429209754fda4b9142d514065f4$export$CollectionBuilder();\n  }, []);\n  var prev = useRef(null);\n  return useMemo(function () {\n    var nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  }, [builder, props.children, props.items, context].concat(_toConsumableArray(invalidators)));\n}\nvar $c10674539d06c96e1a2fbb6a54340$var$cache = new WeakMap();\nexport function getItemCount(collection) {\n  var count = $c10674539d06c96e1a2fbb6a54340$var$cache.get(collection);\n\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n\n  for (var item of collection) {\n    if (item.type === 'section') {\n      count += getItemCount(item.childNodes);\n    } else {\n      count++;\n    }\n  }\n\n  $c10674539d06c96e1a2fbb6a54340$var$cache.set(collection, count);\n  return count;\n}","map":{"version":3,"sources":["packages/@react-stately/collections/src/Item.ts","packages/@react-stately/collections/src/Section.ts","packages/@react-stately/collections/src/CollectionBuilder.ts","packages/@react-stately/collections/src/useCollection.ts","packages/@react-stately/collections/src/getItemCount.ts"],"names":["Item","children","rendered","props","textValue","console","type","hasChildNodes","hasChildItems","value","child","items","React","element","_Item","Section","renderer","_Section","build","iterable","item","index","nodes","partialNode","v","key","parentKey","state","cached","name","childNodes","result","childNode","wrapper","compose","node","capitalize","parentNode","builder","level","shouldInvalidate","cache","Symbol","iterator","outer","inner","str","invalidators","useMemo","prev","useRef","factory","count","getItemCount"],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n  if (!textValue) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n    \n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {Key, ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: CollectionBase<T>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: CollectionBase<T>) {\n    let {children, items} = props;\n\n    if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      for (let item of props.items) {\n        yield* this.getFullNode({\n          value: item\n        }, {renderer: children});\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        items.push(child);\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: CollectionElement<T>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key, parentNode?: Node<T>): Generator<Node<T>> {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as any;\n      if (typeof type !== 'function' || typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: childNode.element ? null : this.getKey(element as CollectionElement<T>, partialNode, state, parentKey),\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode.type)}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            child.key = `${node.key}${child.key}`;\n          }\n\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {useMemo, useRef} from 'react';\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>, prev: C | null) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionBase<T>, factory: CollectionFactory<T, C>, context?: unknown, invalidators: Array<any> = []): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n\n  let prev = useRef<C>(null);\n  return useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  // Don't invalidate when any prop changes, just the two we care about.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Node} from '@react-types/shared';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Iterable<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n  for (let item of collection) {\n    if (item.type === 'section') {\n      count += getItemCount(item.childNodes);\n    } else {\n      count++;\n    }\n  }\n\n  cache.set(collection, count);\n  return count;\n}\n"]},"metadata":{},"sourceType":"module"}