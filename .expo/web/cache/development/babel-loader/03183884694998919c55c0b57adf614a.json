{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport GlobalVars from \"../../../global/globalVars\";\nimport oAuth from \"../../../helpers/oAuth\";\nimport StoreContext from \"../../../helpers/globalStates\";\nimport useModal from \"../../../utils/useModal\";\nimport Loading from \"../../atoms/Loading\";\nimport TitleComponent from \"../../atoms/Titles\";\nimport InputEntry from \"../../molecules/InputEntry\";\nimport ButtonComponent from \"../../atoms/ButtonComponent\";\nimport ModalAlert from \"../ModalAlert\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ModalChangePass = function ModalChangePass(props) {\n  var openModal = props.openModal,\n      onHelp = props.onHelp;\n\n  var _useContext = useContext(StoreContext.UserContext),\n      user = _useContext.user;\n\n  var _useModal = useModal(),\n      isShowingAlert = _useModal.isShowing,\n      toggleAlert = _useModal.toggle;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pass = _useState2[0],\n      setPass = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPass = _useState4[0],\n      setNewPass = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPass = _useState6[0],\n      setConfirmPass = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textAlert = _useState10[0],\n      setTextAlert = _useState10[1];\n\n  var validateData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setLoading(true);\n\n      if (newPass !== confirmPass) {\n        setTimeout(function () {\n          setLoading(false);\n          setTextAlert(\"Claves no coinciden\");\n          toggleAlert();\n        }, 1500);\n        return;\n      }\n\n      var res = yield sendData();\n\n      if (!res) {\n        setTimeout(function () {\n          setLoading(false);\n          setTextAlert(\"Un error ha ocurrido.\");\n          toggleAlert();\n        }, 1500);\n      } else {\n        setLoading(false);\n        setTextAlert(\"Contraseña actualizada.\");\n        setPass(\"\");\n        setNewPass(\"\");\n        setConfirmPass(\"\");\n        toggleAlert();\n      }\n    });\n\n    return function validateData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var sendData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var data = {\n        type: \"1\",\n        email: user == null ? void 0 : user.email,\n        newPass: newPass,\n        newPassConfirm: confirmPass,\n        currentPass: pass\n      };\n      var res = yield oAuth.RecoverPass(data);\n\n      if (res && (res == null ? void 0 : res.message) === \"done\") {\n        setTimeout(_asyncToGenerator(function* () {\n          setLoading(false);\n          onHelp();\n        }), 1500);\n        return true;\n      }\n\n      setTimeout(_asyncToGenerator(function* () {\n        setLoading(false);\n      }), 1500);\n      return false;\n    });\n\n    return function sendData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: openModal,\n    children: _jsxs(View, {\n      style: styles.view,\n      children: [_jsx(ModalAlert, {\n        text: textAlert,\n        openModal: isShowingAlert,\n        onHelp: toggleAlert\n      }), loading && _jsx(Loading, {\n        size: \"small\",\n        color: GlobalVars.white\n      }), !loading && _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TouchableOpacity, {\n          style: {\n            position: \"absolute\",\n            top: 15,\n            right: 15\n          },\n          onPress: onHelp,\n          children: _jsx(AntDesign, {\n            name: \"closecircleo\",\n            size: 24,\n            color: GlobalVars.firstColor\n          })\n        }), _jsx(TitleComponent, {\n          title: \"Cambiar contrase\\xF1a\",\n          color: GlobalVars.firstColor,\n          size: 20,\n          weight: \"800\"\n        }), _jsxs(View, {\n          style: styles.centerContent,\n          children: [_jsx(InputEntry, {\n            label: \"Contrase\\xF1a actual\",\n            textvariable: pass,\n            setValue: function setValue(val) {\n              return setPass(val);\n            },\n            visibility: true,\n            pass: true,\n            colorTextInput: GlobalVars.thirdOrange,\n            colorPlaceholder: \"rgba(0, 0, 0, 0.5)\",\n            customBottom: {\n              borderBottomColor: GlobalVars.thirdOrange,\n              borderBottomWidth: 0.5\n            },\n            noStylesSpaces: true,\n            noMarginH: true\n          }), _jsx(InputEntry, {\n            label: \"Nueva contrase\\xF1a\",\n            textvariable: newPass,\n            setValue: function setValue(val) {\n              return setNewPass(val);\n            },\n            visibility: true,\n            pass: true,\n            colorTextInput: GlobalVars.thirdOrange,\n            colorPlaceholder: \"rgba(0, 0, 0, 0.5)\",\n            customBottom: {\n              borderBottomColor: GlobalVars.thirdOrange,\n              borderBottomWidth: 0.5\n            },\n            noStylesSpaces: true,\n            noMarginH: true\n          }), _jsx(InputEntry, {\n            label: \"Repetir nueva contrase\\xF1a\",\n            textvariable: confirmPass,\n            setValue: function setValue(val) {\n              return setConfirmPass(val);\n            },\n            visibility: true,\n            pass: true,\n            colorTextInput: GlobalVars.thirdOrange,\n            colorPlaceholder: \"rgba(0, 0, 0, 0.5)\",\n            customBottom: {\n              borderBottomColor: GlobalVars.thirdOrange,\n              borderBottomWidth: 0.5\n            },\n            noStylesSpaces: true,\n            noMarginH: true\n          })]\n        }), !loading ? _jsx(ButtonComponent, {\n          text: \"Cambiar contrase\\xF1a\",\n          color: GlobalVars.firstColor,\n          textColor: GlobalVars.white,\n          customStyleBtn: {\n            width: \"80%\",\n            alignSelf: \"center\"\n          },\n          Action: function Action() {\n            return validateData();\n          }\n        }) : _jsx(Loading, {\n          size: \"small\",\n          color: GlobalVars.white\n        })]\n      })]\n    })\n  });\n};\n\nexport default ModalChangePass;","map":{"version":3,"names":["React","useState","useContext","AntDesign","GlobalVars","oAuth","StoreContext","useModal","Loading","TitleComponent","InputEntry","ButtonComponent","ModalAlert","styles","ModalChangePass","props","openModal","onHelp","UserContext","user","isShowingAlert","isShowing","toggleAlert","toggle","pass","setPass","newPass","setNewPass","confirmPass","setConfirmPass","loading","setLoading","textAlert","setTextAlert","validateData","setTimeout","res","sendData","data","type","email","newPassConfirm","currentPass","RecoverPass","message","view","white","container","position","top","right","firstColor","centerContent","val","thirdOrange","borderBottomColor","borderBottomWidth","width","alignSelf"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/components/templates/ModalChangePass/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Modal, View, TouchableOpacity } from \"react-native\";\n\nimport { AntDesign } from \"@expo/vector-icons\";\n\nimport GlobalVars from \"../../../global/globalVars\";\n\nimport oAuth from \"../../../helpers/oAuth\";\nimport StoreContext from \"../../../helpers/globalStates\";\n\nimport useModal from \"../../../utils/useModal\";\n\nimport Loading from \"../../atoms/Loading\";\nimport TitleComponent from \"../../atoms/Titles\";\nimport InputEntry from \"../../molecules/InputEntry\";\nimport ButtonComponent from \"../../atoms/ButtonComponent\";\nimport ModalAlert from \"../ModalAlert\";\n\nimport styles from \"./styles\";\n\nconst ModalChangePass = (props) => {\n  const { openModal, onHelp } = props;\n\n  const { user } = useContext(StoreContext.UserContext);\n\n  const { isShowing: isShowingAlert, toggle: toggleAlert } = useModal();\n\n  const [pass, setPass] = useState(\"\");\n  const [newPass, setNewPass] = useState(\"\");\n  const [confirmPass, setConfirmPass] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [textAlert, setTextAlert] = useState(\"\");\n\n  const validateData = async () => {\n    setLoading(true);\n    if (newPass !== confirmPass) {\n      setTimeout(() => {\n        setLoading(false);\n        setTextAlert(\"Claves no coinciden\");\n        toggleAlert();\n      }, 1500);\n      return;\n    }\n\n    const res = await sendData();\n    if (!res) {\n      setTimeout(() => {\n        setLoading(false);\n        setTextAlert(\"Un error ha ocurrido.\");\n        toggleAlert();\n      }, 1500);\n    } else {\n      setLoading(false);\n      setTextAlert(\"Contraseña actualizada.\");\n      setPass(\"\");\n      setNewPass(\"\");\n      setConfirmPass(\"\");\n      toggleAlert();\n    }\n  };\n\n  const sendData = async () => {\n    let data = {\n      type: \"1\",\n      email: user?.email,\n      newPass,\n      newPassConfirm: confirmPass,\n      currentPass: pass,\n    };\n    const res = await oAuth.RecoverPass(data);\n\n    if (res && res?.message === \"done\") {\n      setTimeout(async () => {\n        setLoading(false);\n        onHelp();\n      }, 1500);\n\n      return true;\n    }\n\n    setTimeout(async () => {\n      setLoading(false);\n    }, 1500);\n    return false;\n  };\n\n  return (\n    <Modal animationType=\"slide\" transparent={true} visible={openModal}>\n      <View style={styles.view}>\n        <ModalAlert\n          text={textAlert}\n          openModal={isShowingAlert}\n          onHelp={toggleAlert}\n        />\n        {loading && <Loading size=\"small\" color={GlobalVars.white} />}\n        {!loading && (\n          <View style={styles.container}>\n            <TouchableOpacity\n              style={{ position: \"absolute\", top: 15, right: 15 }}\n              onPress={onHelp}\n            >\n              <AntDesign\n                name=\"closecircleo\"\n                size={24}\n                color={GlobalVars.firstColor}\n              />\n            </TouchableOpacity>\n            <TitleComponent\n              title=\"Cambiar contraseña\"\n              color={GlobalVars.firstColor}\n              size={20}\n              weight=\"800\"\n            />\n            <View style={styles.centerContent}>\n              <InputEntry\n                label=\"Contraseña actual\"\n                textvariable={pass}\n                setValue={(val) => setPass(val)}\n                visibility\n                pass\n                colorTextInput={GlobalVars.thirdOrange}\n                colorPlaceholder={\"rgba(0, 0, 0, 0.5)\"}\n                customBottom={{\n                  borderBottomColor: GlobalVars.thirdOrange,\n                  borderBottomWidth: 0.5,\n                }}\n                noStylesSpaces\n                noMarginH\n              />\n              <InputEntry\n                label=\"Nueva contraseña\"\n                textvariable={newPass}\n                setValue={(val) => setNewPass(val)}\n                visibility\n                pass\n                colorTextInput={GlobalVars.thirdOrange}\n                colorPlaceholder={\"rgba(0, 0, 0, 0.5)\"}\n                customBottom={{\n                  borderBottomColor: GlobalVars.thirdOrange,\n                  borderBottomWidth: 0.5,\n                }}\n                noStylesSpaces\n                noMarginH\n              />\n              <InputEntry\n                label=\"Repetir nueva contraseña\"\n                textvariable={confirmPass}\n                setValue={(val) => setConfirmPass(val)}\n                visibility\n                pass\n                colorTextInput={GlobalVars.thirdOrange}\n                colorPlaceholder={\"rgba(0, 0, 0, 0.5)\"}\n                customBottom={{\n                  borderBottomColor: GlobalVars.thirdOrange,\n                  borderBottomWidth: 0.5,\n                }}\n                noStylesSpaces\n                noMarginH\n              />\n            </View>\n            {!loading ? (\n              <ButtonComponent\n                text=\"Cambiar contraseña\"\n                color={GlobalVars.firstColor}\n                textColor={GlobalVars.white}\n                customStyleBtn={{\n                  width: \"80%\",\n                  alignSelf: \"center\",\n                }}\n                Action={() => validateData()}\n              />\n            ) : (\n              <Loading size=\"small\" color={GlobalVars.white} />\n            )}\n          </View>\n        )}\n      </View>\n    </Modal>\n  );\n};\n\nexport default ModalChangePass;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,UAAP;AAEA,OAAOC,KAAP;AACA,OAAOC,YAAP;AAEA,OAAOC,QAAP;AAEA,OAAOC,OAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AAEA,OAAOC,MAAP;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;EACjC,IAAQC,SAAR,GAA8BD,KAA9B,CAAQC,SAAR;EAAA,IAAmBC,MAAnB,GAA8BF,KAA9B,CAAmBE,MAAnB;;EAEA,kBAAiBf,UAAU,CAACI,YAAY,CAACY,WAAd,CAA3B;EAAA,IAAQC,IAAR,eAAQA,IAAR;;EAEA,gBAA2DZ,QAAQ,EAAnE;EAAA,IAAmBa,cAAnB,aAAQC,SAAR;EAAA,IAA2CC,WAA3C,aAAmCC,MAAnC;;EAEA,gBAAwBtB,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOuB,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA8BxB,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOyB,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAsC1B,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAO2B,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAA8B5B,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAO6B,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAkC9B,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAO+B,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,YAAY;IAAA,6BAAG,aAAY;MAC/BH,UAAU,CAAC,IAAD,CAAV;;MACA,IAAIL,OAAO,KAAKE,WAAhB,EAA6B;QAC3BO,UAAU,CAAC,YAAM;UACfJ,UAAU,CAAC,KAAD,CAAV;UACAE,YAAY,CAAC,qBAAD,CAAZ;UACAX,WAAW;QACZ,CAJS,EAIP,IAJO,CAAV;QAKA;MACD;;MAED,IAAMc,GAAG,SAASC,QAAQ,EAA1B;;MACA,IAAI,CAACD,GAAL,EAAU;QACRD,UAAU,CAAC,YAAM;UACfJ,UAAU,CAAC,KAAD,CAAV;UACAE,YAAY,CAAC,uBAAD,CAAZ;UACAX,WAAW;QACZ,CAJS,EAIP,IAJO,CAAV;MAKD,CAND,MAMO;QACLS,UAAU,CAAC,KAAD,CAAV;QACAE,YAAY,CAAC,yBAAD,CAAZ;QACAR,OAAO,CAAC,EAAD,CAAP;QACAE,UAAU,CAAC,EAAD,CAAV;QACAE,cAAc,CAAC,EAAD,CAAd;QACAP,WAAW;MACZ;IACF,CA1BiB;;IAAA,gBAAZY,YAAY;MAAA;IAAA;EAAA,GAAlB;;EA4BA,IAAMG,QAAQ;IAAA,8BAAG,aAAY;MAC3B,IAAIC,IAAI,GAAG;QACTC,IAAI,EAAE,GADG;QAETC,KAAK,EAAErB,IAAF,oBAAEA,IAAI,CAAEqB,KAFJ;QAGTd,OAAO,EAAPA,OAHS;QAITe,cAAc,EAAEb,WAJP;QAKTc,WAAW,EAAElB;MALJ,CAAX;MAOA,IAAMY,GAAG,SAAS/B,KAAK,CAACsC,WAAN,CAAkBL,IAAlB,CAAlB;;MAEA,IAAIF,GAAG,IAAI,CAAAA,GAAG,QAAH,YAAAA,GAAG,CAAEQ,OAAL,MAAiB,MAA5B,EAAoC;QAClCT,UAAU,mBAAC,aAAY;UACrBJ,UAAU,CAAC,KAAD,CAAV;UACAd,MAAM;QACP,CAHS,GAGP,IAHO,CAAV;QAKA,OAAO,IAAP;MACD;;MAEDkB,UAAU,mBAAC,aAAY;QACrBJ,UAAU,CAAC,KAAD,CAAV;MACD,CAFS,GAEP,IAFO,CAAV;MAGA,OAAO,KAAP;IACD,CAvBa;;IAAA,gBAARM,QAAQ;MAAA;IAAA;EAAA,GAAd;;EAyBA,OACE,KAAC,KAAD;IAAO,aAAa,EAAC,OAArB;IAA6B,WAAW,EAAE,IAA1C;IAAgD,OAAO,EAAErB,SAAzD;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEH,MAAM,CAACgC,IAApB;MAAA,WACE,KAAC,UAAD;QACE,IAAI,EAAEb,SADR;QAEE,SAAS,EAAEZ,cAFb;QAGE,MAAM,EAAEE;MAHV,EADF,EAMGQ,OAAO,IAAI,KAAC,OAAD;QAAS,IAAI,EAAC,OAAd;QAAsB,KAAK,EAAE1B,UAAU,CAAC0C;MAAxC,EANd,EAOG,CAAChB,OAAD,IACC,MAAC,IAAD;QAAM,KAAK,EAAEjB,MAAM,CAACkC,SAApB;QAAA,WACE,KAAC,gBAAD;UACE,KAAK,EAAE;YAAEC,QAAQ,EAAE,UAAZ;YAAwBC,GAAG,EAAE,EAA7B;YAAiCC,KAAK,EAAE;UAAxC,CADT;UAEE,OAAO,EAAEjC,MAFX;UAAA,UAIE,KAAC,SAAD;YACE,IAAI,EAAC,cADP;YAEE,IAAI,EAAE,EAFR;YAGE,KAAK,EAAEb,UAAU,CAAC+C;UAHpB;QAJF,EADF,EAWE,KAAC,cAAD;UACE,KAAK,EAAC,uBADR;UAEE,KAAK,EAAE/C,UAAU,CAAC+C,UAFpB;UAGE,IAAI,EAAE,EAHR;UAIE,MAAM,EAAC;QAJT,EAXF,EAiBE,MAAC,IAAD;UAAM,KAAK,EAAEtC,MAAM,CAACuC,aAApB;UAAA,WACE,KAAC,UAAD;YACE,KAAK,EAAC,sBADR;YAEE,YAAY,EAAE5B,IAFhB;YAGE,QAAQ,EAAE,kBAAC6B,GAAD;cAAA,OAAS5B,OAAO,CAAC4B,GAAD,CAAhB;YAAA,CAHZ;YAIE,UAAU,MAJZ;YAKE,IAAI,MALN;YAME,cAAc,EAAEjD,UAAU,CAACkD,WAN7B;YAOE,gBAAgB,EAAE,oBAPpB;YAQE,YAAY,EAAE;cACZC,iBAAiB,EAAEnD,UAAU,CAACkD,WADlB;cAEZE,iBAAiB,EAAE;YAFP,CARhB;YAYE,cAAc,MAZhB;YAaE,SAAS;UAbX,EADF,EAgBE,KAAC,UAAD;YACE,KAAK,EAAC,qBADR;YAEE,YAAY,EAAE9B,OAFhB;YAGE,QAAQ,EAAE,kBAAC2B,GAAD;cAAA,OAAS1B,UAAU,CAAC0B,GAAD,CAAnB;YAAA,CAHZ;YAIE,UAAU,MAJZ;YAKE,IAAI,MALN;YAME,cAAc,EAAEjD,UAAU,CAACkD,WAN7B;YAOE,gBAAgB,EAAE,oBAPpB;YAQE,YAAY,EAAE;cACZC,iBAAiB,EAAEnD,UAAU,CAACkD,WADlB;cAEZE,iBAAiB,EAAE;YAFP,CARhB;YAYE,cAAc,MAZhB;YAaE,SAAS;UAbX,EAhBF,EA+BE,KAAC,UAAD;YACE,KAAK,EAAC,6BADR;YAEE,YAAY,EAAE5B,WAFhB;YAGE,QAAQ,EAAE,kBAACyB,GAAD;cAAA,OAASxB,cAAc,CAACwB,GAAD,CAAvB;YAAA,CAHZ;YAIE,UAAU,MAJZ;YAKE,IAAI,MALN;YAME,cAAc,EAAEjD,UAAU,CAACkD,WAN7B;YAOE,gBAAgB,EAAE,oBAPpB;YAQE,YAAY,EAAE;cACZC,iBAAiB,EAAEnD,UAAU,CAACkD,WADlB;cAEZE,iBAAiB,EAAE;YAFP,CARhB;YAYE,cAAc,MAZhB;YAaE,SAAS;UAbX,EA/BF;QAAA,EAjBF,EAgEG,CAAC1B,OAAD,GACC,KAAC,eAAD;UACE,IAAI,EAAC,uBADP;UAEE,KAAK,EAAE1B,UAAU,CAAC+C,UAFpB;UAGE,SAAS,EAAE/C,UAAU,CAAC0C,KAHxB;UAIE,cAAc,EAAE;YACdW,KAAK,EAAE,KADO;YAEdC,SAAS,EAAE;UAFG,CAJlB;UAQE,MAAM,EAAE;YAAA,OAAMxB,YAAY,EAAlB;UAAA;QARV,EADD,GAYC,KAAC,OAAD;UAAS,IAAI,EAAC,OAAd;UAAsB,KAAK,EAAE9B,UAAU,CAAC0C;QAAxC,EA5EJ;MAAA,EARJ;IAAA;EADF,EADF;AA6FD,CA/JD;;AAiKA,eAAehC,eAAf"},"metadata":{},"sourceType":"module"}