{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useCallback, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport GlobalVars from \"../../global/globalVars\";\nimport StoreContext from \"../../helpers/globalStates\";\nimport recoveringStateLocation from \"../../utils/useGPS\";\nimport StatusBarComponent from \"../../components/atoms/StatusBar\";\nimport InputSearch from \"../../components/molecules/InputSearch\";\nimport Header from \"../../components/organisms/Header\";\nimport MapViewComponent from \"../../components/organisms/MapView\";\nimport ProductsGrid from \"../../components/organisms/ProductsGrid\";\nimport ScrollView from \"../../components/templates/ScrollView\";\nimport WrappingViews from \"../../components/templates/WrappingViews\";\nimport Styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = Styles;\n\nvar ProductsScreen = function ProductsScreen(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(StoreContext.SecurityContext),\n      _jwt = _useContext._jwt;\n\n  var _useContext2 = useContext(StoreContext.UserContext),\n      user = _useContext2.user;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ToRandomDispatch = _useState2[0],\n      setToRandomDispatch = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gps = _useState4[0],\n      setGps = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterText = _useState6[0],\n      setFilterText = _useState6[1];\n\n  useEffect(function () {}, []);\n  useFocusEffect(useCallback(function () {\n    getRandomNumberDispatch();\n    captureGps();\n  }, []));\n\n  var getRandomNumberDispatch = function getRandomNumberDispatch() {\n    var attrTemp = Math.random();\n    setToRandomDispatch(attrTemp);\n  };\n\n  var captureGps = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _recover, _recover$coords, _recover2, _recover2$coords;\n\n      var recover = yield recoveringStateLocation();\n\n      while (recover === \"error\" || !recover) {\n        recover = yield recoveringStateLocation();\n      }\n\n      setGps({\n        latitude: (_recover = recover) == null ? void 0 : (_recover$coords = _recover.coords) == null ? void 0 : _recover$coords.latitude,\n        longitude: (_recover2 = recover) == null ? void 0 : (_recover2$coords = _recover2.coords) == null ? void 0 : _recover2$coords.longitude\n      });\n    });\n\n    return function captureGps() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(WrappingViews, {\n    children: [_jsx(StatusBarComponent, {}), _jsx(Header, {\n      navigation: navigation,\n      user: user,\n      _jwt: _jwt,\n      title: \"Emprendimientos\",\n      ToRandomDispatch: ToRandomDispatch,\n      isJustTitle: true\n    }), _jsx(View, {\n      style: styles.searchView,\n      children: _jsx(InputSearch, {\n        label: \"Buscar productos\",\n        iconName: filterText ? \"x\" : \"search\",\n        textvariable: filterText || \"\",\n        setValue: function setValue(val) {\n          return setFilterText(val);\n        },\n        bgBlue: true\n      })\n    }), _jsx(ScrollView, {\n      style: styles.scrolling,\n      contentContainerStyle: styles.wrapScrollView,\n      colorScrollBar: GlobalVars.orange,\n      children: _jsx(View, {\n        style: {\n          width: \"100%\",\n          paddingHorizontal: 20\n        },\n        children: _jsx(ProductsGrid, {\n          jwt: _jwt,\n          entrepreneur: (_route$params = route.params) == null ? void 0 : _route$params.shopID,\n          filterText: filterText,\n          allActive: true\n        })\n      })\n    })]\n  });\n};\n\nexport default ProductsScreen;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useContext","useFocusEffect","GlobalVars","StoreContext","recoveringStateLocation","StatusBarComponent","InputSearch","Header","MapViewComponent","ProductsGrid","ScrollView","WrappingViews","Styles","styles","ProductsScreen","navigation","route","SecurityContext","_jwt","UserContext","user","ToRandomDispatch","setToRandomDispatch","gps","setGps","filterText","setFilterText","getRandomNumberDispatch","captureGps","attrTemp","Math","random","recover","latitude","coords","longitude","searchView","val","scrolling","wrapScrollView","orange","width","paddingHorizontal","params","shopID"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/screens/ProductsEntrepreneur/index.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useContext } from \"react\";\n\nimport { View, ActivityIndicator } from \"react-native\";\n\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nimport GlobalVars from \"../../global/globalVars\";\n\nimport StoreContext from \"../../helpers/globalStates\";\n\nimport recoveringStateLocation from \"../../utils/useGPS\";\n\n/** Import Componentes Custom */\nimport StatusBarComponent from \"../../components/atoms/StatusBar\";\nimport InputSearch from \"../../components/molecules/InputSearch\";\nimport Header from \"../../components/organisms/Header\";\nimport MapViewComponent from \"../../components/organisms/MapView\";\nimport ProductsGrid from \"../../components/organisms/ProductsGrid\";\nimport ScrollView from \"../../components/templates/ScrollView\";\nimport WrappingViews from \"../../components/templates/WrappingViews\";\n\n/** Styles */\nimport Styles from \"./style\";\n\nconst styles = Styles;\nconst ProductsScreen = ({ navigation, route }) => {\n  const { _jwt } = useContext(StoreContext.SecurityContext);\n  const { user } = useContext(StoreContext.UserContext);\n\n  const [ToRandomDispatch, setToRandomDispatch] = useState(null);\n\n  const [gps, setGps] = useState(null);\n  const [filterText, setFilterText] = useState(\"\");\n\n  useEffect(() => {}, []);\n\n  useFocusEffect(\n    useCallback(() => {\n      getRandomNumberDispatch();\n\n      captureGps();\n    }, [])\n  );\n\n  const getRandomNumberDispatch = () => {\n    // random vals process for generate token for wish\n    const attrTemp = Math.random();\n    setToRandomDispatch(attrTemp);\n  };\n\n  const captureGps = async () => {\n    let recover = await recoveringStateLocation();\n    while (recover === \"error\" || !recover) {\n      recover = await recoveringStateLocation();\n    }\n    setGps({\n      latitude: recover?.coords?.latitude,\n      longitude: recover?.coords?.longitude,\n    });\n  };\n\n  return (\n    <WrappingViews>\n      <StatusBarComponent />\n      <Header\n        navigation={navigation}\n        user={user}\n        _jwt={_jwt}\n        title=\"Emprendimientos\"\n        ToRandomDispatch={ToRandomDispatch}\n        isJustTitle\n      />\n\n      <View style={styles.searchView}>\n        <InputSearch\n          label=\"Buscar productos\"\n          iconName={filterText ? \"x\" : \"search\"}\n          textvariable={filterText || \"\"}\n          setValue={(val) => setFilterText(val)}\n          bgBlue\n        />\n      </View>\n\n      <ScrollView\n        style={styles.scrolling}\n        contentContainerStyle={styles.wrapScrollView}\n        colorScrollBar={GlobalVars.orange}\n      >\n        <View style={{ width: \"100%\", paddingHorizontal: 20 }}>\n          <ProductsGrid\n            jwt={_jwt}\n            entrepreneur={route.params?.shopID}\n            filterText={filterText}\n            allActive\n          />\n        </View>\n      </ScrollView>\n    </WrappingViews>\n  );\n};\n\nexport default ProductsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}