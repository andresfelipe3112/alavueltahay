{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"iconName\", \"label\", \"textvariable\", \"pass\", \"type\", \"keyboard\", \"maxlong\", \"barBottom\", \"colorTextInput\", \"showKeyboard\", \"colorPlaceholder\"];\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Feather } from \"@expo/vector-icons\";\nimport GlobalVars from \"../../../global/globalVars\";\nimport Styles from \"./style\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = Styles;\n\nvar InputEntry = function InputEntry(_ref) {\n  var iconName = _ref.iconName,\n      label = _ref.label,\n      textvariable = _ref.textvariable,\n      _ref$pass = _ref.pass,\n      pass = _ref$pass === void 0 ? false : _ref$pass,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"none\" : _ref$type,\n      _ref$keyboard = _ref.keyboard,\n      keyboard = _ref$keyboard === void 0 ? \"default\" : _ref$keyboard,\n      _ref$maxlong = _ref.maxlong,\n      maxlong = _ref$maxlong === void 0 ? 2000 : _ref$maxlong,\n      _ref$barBottom = _ref.barBottom,\n      barBottom = _ref$barBottom === void 0 ? false : _ref$barBottom,\n      _ref$colorTextInput = _ref.colorTextInput,\n      colorTextInput = _ref$colorTextInput === void 0 ? GlobalVars.whiteLight : _ref$colorTextInput,\n      _ref$showKeyboard = _ref.showKeyboard,\n      showKeyboard = _ref$showKeyboard === void 0 ? true : _ref$showKeyboard,\n      _ref$colorPlaceholder = _ref.colorPlaceholder,\n      colorPlaceholder = _ref$colorPlaceholder === void 0 ? GlobalVars.whiteLight : _ref$colorPlaceholder,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hiddenstatus = _useState2[0],\n      setHiddenstatus = _useState2[1];\n\n  if (props.noVisible) return _jsx(_Fragment, {});\n  var visibility = props.visibility ? true : null;\n  var IconRender = iconName ? _jsx(Feather, {\n    style: styles.iconstyle,\n    name: iconName,\n    size: 25,\n    color: GlobalVars.white\n  }) : _jsx(_Fragment, {});\n\n  var setValue = function setValue(value) {\n    if (props.setValue) {\n      props.setValue(value);\n    }\n  };\n\n  var setearShowDate = function setearShowDate() {\n    if (props.setearShowDate) {\n      props.setearShowDate();\n    }\n  };\n\n  var iconeye = null;\n\n  if (visibility) {\n    iconeye = hiddenstatus ? _jsx(Feather, {\n      style: styles.eye,\n      name: \"eye\",\n      color: colorTextInput,\n      onPress: function onPress() {\n        return setHiddenstatus(!hiddenstatus);\n      },\n      size: 25\n    }) : _jsx(Feather, {\n      style: styles.eye,\n      name: \"eye-off\",\n      color: colorTextInput,\n      onPress: function onPress() {\n        return setHiddenstatus(!hiddenstatus);\n      },\n      size: 25\n    });\n  }\n\n  if (props.isInputTouchDate) {\n    return _jsx(View, {\n      style: styles.rootView,\n      children: _jsx(TouchableOpacity, {\n        style: styles.touchCalendar,\n        onPress: function onPress() {\n          return setearShowDate();\n        },\n        children: _jsxs(View, {\n          style: styles.inner,\n          children: [IconRender, _jsx(View, {\n            style: styles.innerCalendar,\n            children: _jsx(Text, {\n              style: [styles.textCalendar, {\n                color: !textvariable ? GlobalVars.white : GlobalVars.whiteLight\n              }],\n              children: textvariable || label\n            })\n          })]\n        })\n      })\n    });\n  }\n\n  return _jsx(View, {\n    style: [styles.rootView, {\n      borderBottomColor: barBottom ? GlobalVars.white : null,\n      borderBottomWidth: barBottom ? 1 : 0\n    }, props.customBottom || null],\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.container,\n      children: _jsx(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        style: {\n          width: \"100%\"\n        },\n        children: _jsxs(View, {\n          style: styles.inner,\n          children: [IconRender, !hiddenstatus && pass ? _jsx(TextInput, {\n            placeholder: label,\n            placeholderTextColor: colorPlaceholder,\n            style: [styles.textInput, {\n              color: colorTextInput,\n              width: props.noMarginH ? \"100%\" : \"90%\"\n            }, props.noStylesSpaces ? null : styles.addStylesSpaces],\n            onChangeText: function onChangeText(text) {\n              return setValue(text);\n            },\n            value: textvariable,\n            secureTextEntry: true,\n            keyboardType: keyboard,\n            textContentType: type,\n            maxLength: maxlong\n          }) : _jsx(TextInput, {\n            placeholder: label,\n            placeholderTextColor: colorPlaceholder,\n            style: [styles.textInput, {\n              color: colorTextInput,\n              width: props.noMarginH ? \"100%\" : \"90%\"\n            }, props.noStylesSpaces ? null : styles.addStylesSpaces],\n            onChangeText: function onChangeText(text) {\n              return setValue(text);\n            },\n            value: textvariable,\n            secureTextEntry: false,\n            keyboardType: keyboard,\n            textContentType: type,\n            maxLength: maxlong,\n            showSoftInputOnFocus: showKeyboard\n          }), iconeye]\n        })\n      })\n    })\n  });\n};\n\nexport default InputEntry;","map":{"version":3,"names":["React","useState","Feather","GlobalVars","Styles","styles","InputEntry","iconName","label","textvariable","pass","type","keyboard","maxlong","barBottom","colorTextInput","whiteLight","showKeyboard","colorPlaceholder","props","hiddenstatus","setHiddenstatus","noVisible","visibility","IconRender","iconstyle","white","setValue","value","setearShowDate","iconeye","eye","isInputTouchDate","rootView","touchCalendar","inner","innerCalendar","textCalendar","color","borderBottomColor","borderBottomWidth","customBottom","Platform","OS","container","Keyboard","dismiss","width","textInput","noMarginH","noStylesSpaces","addStylesSpaces","text"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/components/molecules/InputEntry/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  TextInput,\n  Keyboard,\n  Platform,\n  Text,\n} from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\n\n/** Import Global Variables */\nimport GlobalVars from \"../../../global/globalVars\";\n\n/** Import Styles for this Screen */\nimport Styles from \"./style\";\n\nconst styles = Styles;\nconst InputEntry = ({\n  iconName,\n  label,\n  textvariable,\n  pass = false,\n  type = \"none\",\n  keyboard = \"default\",\n  maxlong = 2000,\n  barBottom = false,\n  colorTextInput = GlobalVars.whiteLight,\n  showKeyboard = true,\n  colorPlaceholder = GlobalVars.whiteLight,\n  ...props\n}) => {\n  const [hiddenstatus, setHiddenstatus] = useState(false);\n\n  if (props.noVisible) return <></>;\n  const visibility = props.visibility ? true : null;\n  const IconRender = iconName ? (\n    <Feather\n      style={styles.iconstyle}\n      name={iconName}\n      size={25}\n      color={GlobalVars.white}\n    />\n  ) : (\n    <></>\n  );\n\n  const setValue = (value) => {\n    if (props.setValue) {\n      props.setValue(value);\n    }\n  };\n\n  const setearShowDate = () => {\n    if (props.setearShowDate) {\n      props.setearShowDate();\n    }\n  };\n\n  let iconeye = null;\n  if (visibility) {\n    iconeye = hiddenstatus ? (\n      <Feather\n        style={styles.eye}\n        name=\"eye\"\n        color={colorTextInput}\n        onPress={() => setHiddenstatus(!hiddenstatus)}\n        size={25}\n      />\n    ) : (\n      <Feather\n        style={styles.eye}\n        name=\"eye-off\"\n        color={colorTextInput}\n        onPress={() => setHiddenstatus(!hiddenstatus)}\n        size={25}\n      />\n    );\n  }\n\n  if (props.isInputTouchDate) {\n    return (\n      <View style={styles.rootView}>\n        <TouchableOpacity\n          style={styles.touchCalendar}\n          onPress={() => setearShowDate()}\n        >\n          <View style={styles.inner}>\n            {IconRender}\n            <View style={styles.innerCalendar}>\n              <Text\n                style={[\n                  styles.textCalendar,\n                  {\n                    color: !textvariable\n                      ? GlobalVars.white\n                      : GlobalVars.whiteLight,\n                  },\n                ]}\n              >\n                {textvariable || label}\n              </Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[\n        styles.rootView,\n        {\n          borderBottomColor: barBottom ? GlobalVars.white : null,\n          borderBottomWidth: barBottom ? 1 : 0,\n        },\n        props.customBottom || null,\n      ]}\n    >\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n      >\n        <TouchableWithoutFeedback\n          onPress={Keyboard.dismiss}\n          style={{ width: \"100%\" }}\n        >\n          <View style={styles.inner}>\n            {IconRender}\n            {!hiddenstatus && pass ? (\n              <TextInput\n                placeholder={label}\n                placeholderTextColor={colorPlaceholder}\n                style={[\n                  styles.textInput,\n                  {\n                    color: colorTextInput,\n                    width: props.noMarginH ? \"100%\" : \"90%\",\n                  },\n                  props.noStylesSpaces ? null : styles.addStylesSpaces,\n                ]}\n                onChangeText={(text) => setValue(text)}\n                value={textvariable}\n                secureTextEntry={true}\n                keyboardType={keyboard}\n                textContentType={type}\n                maxLength={maxlong}\n              />\n            ) : (\n              <TextInput\n                placeholder={label}\n                placeholderTextColor={colorPlaceholder}\n                style={[\n                  styles.textInput,\n                  {\n                    color: colorTextInput,\n                    width: props.noMarginH ? \"100%\" : \"90%\",\n                  },\n                  props.noStylesSpaces ? null : styles.addStylesSpaces,\n                ]}\n                onChangeText={(text) => setValue(text)}\n                value={textvariable}\n                secureTextEntry={false}\n                keyboardType={keyboard}\n                textContentType={type}\n                maxLength={maxlong}\n                showSoftInputOnFocus={showKeyboard}\n              />\n            )}\n            {iconeye}\n          </View>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </View>\n  );\n};\n\nexport default InputEntry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}