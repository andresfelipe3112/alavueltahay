{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport FetchLib from \"../../utils/useFetch\";\nimport GlobalVars from \"../../global/globalVars\";\n\nvar deleteNotification = function () {\n  var _ref = _asyncToGenerator(function* (ID, _JWT) {\n    if (!ID || !_JWT) {\n      return false;\n    }\n\n    var URL_API_DELETE_NOTIFICATION = GlobalVars.urlapi + \"/notifications/\" + ID;\n    var res = yield FetchLib.fetchDrop(URL_API_DELETE_NOTIFICATION, _JWT);\n\n    if (!res.error && res.data) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return function deleteNotification(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar sendQueryNotification = function () {\n  var _ref2 = _asyncToGenerator(function* (DATA, _JWT) {\n    if (!DATA || !_JWT) {\n      return false;\n    }\n\n    var URL_API_DISPATCH_NOTIFICATION = GlobalVars.urlapi + \"/notifications/activeSend\";\n    var res = yield FetchLib.fetchPost(URL_API_DISPATCH_NOTIFICATION, DATA, _JWT);\n\n    if (!res.error && res.data) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return function sendQueryNotification(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default {\n  deleteNotification: deleteNotification,\n  sendQueryNotification: sendQueryNotification\n};","map":{"version":3,"names":["FetchLib","GlobalVars","deleteNotification","ID","_JWT","URL_API_DELETE_NOTIFICATION","urlapi","res","fetchDrop","error","data","sendQueryNotification","DATA","URL_API_DISPATCH_NOTIFICATION","fetchPost"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/helpers/dataNotification/index.js"],"sourcesContent":["import FetchLib from \"../../utils/useFetch\";\n\nimport GlobalVars from \"../../global/globalVars\";\n\nconst deleteNotification = async (ID, _JWT) => {\n  if (!ID || !_JWT) {\n    return false;\n  }\n\n  const URL_API_DELETE_NOTIFICATION = `${GlobalVars.urlapi}/notifications/${ID}`;\n  const res = await FetchLib.fetchDrop(URL_API_DELETE_NOTIFICATION, _JWT);\n\n  if (!res.error && res.data) {\n    return true;\n  }\n\n  return false;\n};\n\nconst sendQueryNotification = async (DATA, _JWT) => {\n  if (!DATA || !_JWT) {\n    return false;\n  }\n\n  const URL_API_DISPATCH_NOTIFICATION = `${GlobalVars.urlapi}/notifications/activeSend`;\n  const res = await FetchLib.fetchPost(\n    URL_API_DISPATCH_NOTIFICATION,\n    DATA,\n    _JWT\n  );\n\n  if (!res.error && res.data) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default {\n  deleteNotification,\n  sendQueryNotification,\n};\n"],"mappings":";AAAA,OAAOA,QAAP;AAEA,OAAOC,UAAP;;AAEA,IAAMC,kBAAkB;EAAA,6BAAG,WAAOC,EAAP,EAAWC,IAAX,EAAoB;IAC7C,IAAI,CAACD,EAAD,IAAO,CAACC,IAAZ,EAAkB;MAChB,OAAO,KAAP;IACD;;IAED,IAAMC,2BAA2B,GAAMJ,UAAU,CAACK,MAAjB,uBAAyCH,EAA1E;IACA,IAAMI,GAAG,SAASP,QAAQ,CAACQ,SAAT,CAAmBH,2BAAnB,EAAgDD,IAAhD,CAAlB;;IAEA,IAAI,CAACG,GAAG,CAACE,KAAL,IAAcF,GAAG,CAACG,IAAtB,EAA4B;MAC1B,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD,CAbuB;;EAAA,gBAAlBR,kBAAkB;IAAA;EAAA;AAAA,GAAxB;;AAeA,IAAMS,qBAAqB;EAAA,8BAAG,WAAOC,IAAP,EAAaR,IAAb,EAAsB;IAClD,IAAI,CAACQ,IAAD,IAAS,CAACR,IAAd,EAAoB;MAClB,OAAO,KAAP;IACD;;IAED,IAAMS,6BAA6B,GAAMZ,UAAU,CAACK,MAAjB,8BAAnC;IACA,IAAMC,GAAG,SAASP,QAAQ,CAACc,SAAT,CAChBD,6BADgB,EAEhBD,IAFgB,EAGhBR,IAHgB,CAAlB;;IAMA,IAAI,CAACG,GAAG,CAACE,KAAL,IAAcF,GAAG,CAACG,IAAtB,EAA4B;MAC1B,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD,CAjB0B;;EAAA,gBAArBC,qBAAqB;IAAA;EAAA;AAAA,GAA3B;;AAmBA,eAAe;EACbT,kBAAkB,EAAlBA,kBADa;EAEbS,qBAAqB,EAArBA;AAFa,CAAf"},"metadata":{},"sourceType":"module"}