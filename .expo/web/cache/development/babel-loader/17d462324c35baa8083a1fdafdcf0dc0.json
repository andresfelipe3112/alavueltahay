{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport FetchLib from \"../../utils/useFetch\";\nimport GlobalVars from \"../../global/globalVars\";\n\nvar uploadUserNewPhoto = function () {\n  var _ref = _asyncToGenerator(function* (IMG, USR, NEW_IMG, _JWT) {\n    var _resPhoto$, _resPhoto$2, _resSaveImg$data, _resPhoto$5;\n\n    var URL_API_UPLOAD_IMAGE = GlobalVars.urlapi + \"/upload\";\n    var formDataImage = new FormData();\n    formDataImage.append(\"files\", {\n      name: \"usr_image_\" + USR.id + \"_\" + USR.username,\n      type: NEW_IMG == null ? void 0 : NEW_IMG.format,\n      uri: NEW_IMG == null ? void 0 : NEW_IMG.uri\n    });\n    var resPhoto = yield FetchLib.fetchPostFormData(URL_API_UPLOAD_IMAGE, formDataImage, _JWT);\n\n    if (resPhoto.error) {\n      return false;\n    }\n\n    var URL_API_SAVE_URI_IMAGE = GlobalVars.urlapi + \"/images\";\n    var resSaveImg = yield FetchLib.fetchPost(URL_API_SAVE_URI_IMAGE, {\n      data: {\n        name: \"usr_image_\" + USR.id + \"_\" + USR.username,\n        uri: ((_resPhoto$ = resPhoto[0]) == null ? void 0 : _resPhoto$.url) || \"\",\n        identifierS3: \"\" + ((_resPhoto$2 = resPhoto[0]) == null ? void 0 : _resPhoto$2.id) || \"\"\n      }\n    }, _JWT);\n\n    if (resSaveImg.error) {\n      var _resPhoto$3;\n\n      var URL_API_REMOVE_UPLOAD_IMAGE = GlobalVars.urlapi + \"/upload/files/\" + ((_resPhoto$3 = resPhoto[0]) == null ? void 0 : _resPhoto$3.id);\n      var resRemoveUpload = yield FetchLib.fetchDrop(URL_API_REMOVE_UPLOAD_IMAGE, _JWT);\n      return false;\n    }\n\n    var URL_API_SAVE_RELATIONSHIP_IMG_USR = GlobalVars.urlapi + \"/users/\" + USR.id;\n    var resSaveRelationImage = yield FetchLib.fetchPut(URL_API_SAVE_RELATIONSHIP_IMG_USR, {\n      image: {\n        id: resSaveImg == null ? void 0 : (_resSaveImg$data = resSaveImg.data) == null ? void 0 : _resSaveImg$data.id\n      }\n    }, _JWT);\n\n    if (resSaveRelationImage.error) {\n      var _resPhoto$4, _resSaveImg$data2;\n\n      var _URL_API_REMOVE_UPLOAD_IMAGE = GlobalVars.urlapi + \"/upload/files/\" + ((_resPhoto$4 = resPhoto[0]) == null ? void 0 : _resPhoto$4.id);\n\n      var _resRemoveUpload = yield FetchLib.fetchDrop(_URL_API_REMOVE_UPLOAD_IMAGE, _JWT);\n\n      var URL_API_REMOVE_CONTENT_IMAGE = GlobalVars.urlapi + \"/images/\" + (resSaveImg == null ? void 0 : (_resSaveImg$data2 = resSaveImg.data) == null ? void 0 : _resSaveImg$data2.id);\n      var resRemoveImage = yield FetchLib.fetchDrop(URL_API_REMOVE_CONTENT_IMAGE, _JWT);\n      return false;\n    }\n\n    if (IMG) {\n      var URL_API_DROP_IMAGE_ROW = GlobalVars.urlapi + \"/images/\" + IMG.id;\n      var deleteRowImage = yield FetchLib.fetchDrop(URL_API_DROP_IMAGE_ROW, _JWT);\n\n      if (deleteRowImage.error) {\n        return false;\n      }\n\n      var URL_API_DROP_IMAGE_S3 = GlobalVars.urlapi + \"/upload/files/\" + IMG.identifierS3;\n      var deleteImageS3 = yield FetchLib.fetchDrop(URL_API_DROP_IMAGE_S3, _JWT);\n\n      if (deleteImageS3.error) {\n        return false;\n      }\n    }\n\n    if ((_resPhoto$5 = resPhoto[0]) != null && _resPhoto$5.id && resSaveImg != null && resSaveImg.data && resSaveRelationImage != null && resSaveRelationImage.id) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return function uploadUserNewPhoto(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  uploadUserNewPhoto: uploadUserNewPhoto\n};","map":{"version":3,"names":["FetchLib","GlobalVars","uploadUserNewPhoto","IMG","USR","NEW_IMG","_JWT","URL_API_UPLOAD_IMAGE","urlapi","formDataImage","FormData","append","name","id","username","type","format","uri","resPhoto","fetchPostFormData","error","URL_API_SAVE_URI_IMAGE","resSaveImg","fetchPost","data","url","identifierS3","URL_API_REMOVE_UPLOAD_IMAGE","resRemoveUpload","fetchDrop","URL_API_SAVE_RELATIONSHIP_IMG_USR","resSaveRelationImage","fetchPut","image","URL_API_REMOVE_CONTENT_IMAGE","resRemoveImage","URL_API_DROP_IMAGE_ROW","deleteRowImage","URL_API_DROP_IMAGE_S3","deleteImageS3"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/helpers/savePhotoUser/index.js"],"sourcesContent":["import FetchLib from \"../../utils/useFetch\";\n\nimport GlobalVars from \"../../global/globalVars\";\n\nconst uploadUserNewPhoto = async (IMG, USR, NEW_IMG, _JWT) => {\n  const URL_API_UPLOAD_IMAGE = `${GlobalVars.urlapi}/upload`;\n  const formDataImage = new FormData();\n  formDataImage.append(\"files\", {\n    name: `usr_image_${USR.id}_${USR.username}`,\n    type: NEW_IMG?.format,\n    uri: NEW_IMG?.uri,\n  });\n  const resPhoto = await FetchLib.fetchPostFormData(\n    URL_API_UPLOAD_IMAGE,\n    formDataImage,\n    _JWT\n  );\n\n  if (resPhoto.error) {\n    return false;\n  }\n\n  const URL_API_SAVE_URI_IMAGE = `${GlobalVars.urlapi}/images`;\n  const resSaveImg = await FetchLib.fetchPost(\n    URL_API_SAVE_URI_IMAGE,\n    {\n      data: {\n        name: `usr_image_${USR.id}_${USR.username}`,\n        uri: resPhoto[0]?.url || \"\",\n        identifierS3: `${resPhoto[0]?.id}` || \"\",\n      },\n    },\n    _JWT\n  );\n\n  if (resSaveImg.error) {\n    const URL_API_REMOVE_UPLOAD_IMAGE = `${GlobalVars.urlapi}/upload/files/${resPhoto[0]?.id}`;\n    const resRemoveUpload = await FetchLib.fetchDrop(\n      URL_API_REMOVE_UPLOAD_IMAGE,\n      _JWT\n    );\n    return false;\n  }\n\n  const URL_API_SAVE_RELATIONSHIP_IMG_USR = `${GlobalVars.urlapi}/users/${USR.id}`;\n  const resSaveRelationImage = await FetchLib.fetchPut(\n    URL_API_SAVE_RELATIONSHIP_IMG_USR,\n    {\n      image: {\n        id: resSaveImg?.data?.id,\n      },\n    },\n    _JWT\n  );\n\n  if (resSaveRelationImage.error) {\n    const URL_API_REMOVE_UPLOAD_IMAGE = `${GlobalVars.urlapi}/upload/files/${resPhoto[0]?.id}`;\n    const resRemoveUpload = await FetchLib.fetchDrop(\n      URL_API_REMOVE_UPLOAD_IMAGE,\n      _JWT\n    );\n    const URL_API_REMOVE_CONTENT_IMAGE = `${GlobalVars.urlapi}/images/${resSaveImg?.data?.id}`;\n    const resRemoveImage = await FetchLib.fetchDrop(\n      URL_API_REMOVE_CONTENT_IMAGE,\n      _JWT\n    );\n    return false;\n  }\n\n  if (IMG) {\n    const URL_API_DROP_IMAGE_ROW = `${GlobalVars.urlapi}/images/${IMG.id}`;\n    const deleteRowImage = await FetchLib.fetchDrop(\n      URL_API_DROP_IMAGE_ROW,\n      _JWT\n    );\n    if (deleteRowImage.error) {\n      return false;\n    }\n\n    const URL_API_DROP_IMAGE_S3 = `${GlobalVars.urlapi}/upload/files/${IMG.identifierS3}`;\n    const deleteImageS3 = await FetchLib.fetchDrop(URL_API_DROP_IMAGE_S3, _JWT);\n    if (deleteImageS3.error) {\n      return false;\n    }\n  }\n\n  if (resPhoto[0]?.id && resSaveImg?.data && resSaveRelationImage?.id) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default {\n  uploadUserNewPhoto,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}