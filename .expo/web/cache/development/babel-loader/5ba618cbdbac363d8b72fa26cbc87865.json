{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nvar fetchPost = function () {\n  var _ref = _asyncToGenerator(function* (url, data, token) {\n    try {\n      var headers;\n\n      if (token) {\n        headers = {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        };\n      } else {\n        headers = {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        };\n      }\n\n      var response = yield fetch(url, {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(data)\n      });\n      var responseJson = yield response.json();\n      return responseJson;\n    } catch (error) {\n      return \"error\";\n    }\n  });\n\n  return function fetchPost(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchGet = function () {\n  var _ref2 = _asyncToGenerator(function* (url, token) {\n    try {\n      var headers = {};\n\n      if (token) {\n        headers = {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        };\n      } else {\n        headers = {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        };\n      }\n\n      var response = yield fetch(url, {\n        method: \"GET\",\n        headers: headers\n      });\n      var responseJson = yield response.json();\n      return responseJson;\n    } catch (error) {\n      return \"error\";\n    }\n  });\n\n  return function fetchGet(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar fetchPostFormData = function () {\n  var _ref3 = _asyncToGenerator(function* (url, data, token) {\n    try {\n      var headers;\n\n      if (token) {\n        headers = {\n          Authorization: \"Bearer \" + token\n        };\n      } else {\n        return \"error\";\n      }\n\n      var response = yield fetch(url, {\n        method: \"POST\",\n        headers: headers,\n        body: data\n      });\n      var responseJson = yield response.json();\n      return responseJson;\n    } catch (error) {\n      return \"error\";\n    }\n  });\n\n  return function fetchPostFormData(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar fetchPut = function () {\n  var _ref4 = _asyncToGenerator(function* (url, data, token) {\n    try {\n      var headers;\n\n      if (token) {\n        headers = {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        };\n      } else {\n        headers = {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        };\n      }\n\n      var response = yield fetch(url, {\n        method: \"PUT\",\n        headers: headers,\n        body: JSON.stringify(data)\n      });\n      var responseJson = yield response.json();\n      return responseJson;\n    } catch (error) {\n      return \"error\";\n    }\n  });\n\n  return function fetchPut(_x9, _x10, _x11) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar fetchDrop = function () {\n  var _ref5 = _asyncToGenerator(function* (url, token) {\n    try {\n      var headers = {};\n\n      if (token) {\n        headers = {\n          Authorization: \"Bearer \" + token\n        };\n      } else {\n        return \"error\";\n      }\n\n      var response = yield fetch(url, {\n        method: \"DELETE\",\n        headers: headers\n      });\n      var responseJson = yield response.json();\n      return responseJson;\n    } catch (error) {\n      return \"error\";\n    }\n  });\n\n  return function fetchDrop(_x12, _x13) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar FetchLib = {\n  fetchPost: fetchPost,\n  fetchGet: fetchGet,\n  fetchPostFormData: fetchPostFormData,\n  fetchPut: fetchPut,\n  fetchDrop: fetchDrop\n};\nexport default FetchLib;","map":{"version":3,"names":["fetchPost","url","data","token","headers","Accept","Authorization","response","fetch","method","body","JSON","stringify","responseJson","json","error","fetchGet","fetchPostFormData","fetchPut","fetchDrop","FetchLib"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/utils/useFetch/index.js"],"sourcesContent":["const fetchPost = async (url, data, token) => {\n  try {\n    let headers;\n    if (token) {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      };\n    } else {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      };\n    }\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(data),\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    // console.warn(error);\n    return \"error\";\n  }\n};\n\nconst fetchGet = async (url, token) => {\n  try {\n    let headers = {};\n    if (token) {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      };\n    } else {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      };\n    }\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: headers,\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    // console.warn(error);\n    return \"error\";\n  }\n};\n\nconst fetchPostFormData = async (url, data, token) => {\n  try {\n    let headers;\n    if (token) {\n      headers = {\n        Authorization: \"Bearer \" + token,\n      };\n    } else {\n      return \"error\";\n    }\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: headers,\n      body: data,\n    });\n\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    // console.warn(error);\n    return \"error\";\n  }\n};\n\nconst fetchPut = async (url, data, token) => {\n  try {\n    let headers;\n    if (token) {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      };\n    } else {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      };\n    }\n    const response = await fetch(url, {\n      method: \"PUT\",\n      headers: headers,\n      body: JSON.stringify(data),\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    // console.warn(error);\n    return \"error\";\n  }\n};\n\nconst fetchDrop = async (url, token) => {\n  try {\n    let headers = {};\n    if (token) {\n      headers = {\n        Authorization: \"Bearer \" + token,\n      };\n    } else {\n      return \"error\";\n    }\n    const response = await fetch(url, {\n      method: \"DELETE\",\n      headers: headers,\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    // console.warn(error);\n    return \"error\";\n  }\n};\n\nconst FetchLib = {\n  fetchPost,\n  fetchGet,\n  fetchPostFormData,\n  fetchPut,\n  fetchDrop,\n};\n\nexport default FetchLib;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}