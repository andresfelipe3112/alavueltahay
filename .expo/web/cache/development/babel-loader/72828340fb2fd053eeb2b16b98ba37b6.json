{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { GET_ALLS_ENTREPRENEURS } from \"../../../mock/entrepreneurs\";\nimport { GET_ENTREPRENEURS_FOR_CATEGORY } from \"../../../mock/entrepreneursByCat\";\nimport LabelTextComponent from \"../../atoms/LabelText\";\nimport EntrepreneurCard from \"../../molecules/EntrepreneurCard\";\nimport GlobalVars from \"../../../global/globalVars\";\nimport Styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = Styles;\nvar AnimatedScrollView = Animated.createAnimatedComponent(ScrollView);\nexport default function EntrepreneursGrid(_ref) {\n  var _ref$jwt = _ref.jwt,\n      jwt = _ref$jwt === void 0 ? null : _ref$jwt,\n      _ref$selectedCategory = _ref.selectedCategory,\n      selectedCategory = _ref$selectedCategory === void 0 ? null : _ref$selectedCategory,\n      _ref$filterText = _ref.filterText,\n      filterText = _ref$filterText === void 0 ? \"\" : _ref$filterText;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      result = _React$useState2[0],\n      setResult = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      resultfilter = _React$useState4[0],\n      setResultfilter = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      empty = _React$useState8[0],\n      setEmpty = _React$useState8[1];\n\n  React.useEffect(function () {\n    getEntrepreneurs();\n  }, []);\n  React.useEffect(function () {\n    getEntrepreneurs();\n  }, [selectedCategory]);\n  React.useEffect(function () {\n    if (result && result.length) {\n      SearchFilter(filterText);\n    } else {\n      setResultfilter([]);\n    }\n  }, [result]);\n  React.useEffect(function () {\n    SearchFilter(filterText);\n  }, [filterText]);\n\n  var getEntrepreneurs = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield setLoading(true);\n\n      if (selectedCategory) {\n        var res = yield GET_ENTREPRENEURS_FOR_CATEGORY(jwt, selectedCategory);\n\n        if (res && res.length) {\n          setLoading(false);\n          setResult(res);\n          setEmpty(false);\n        } else {\n          setLoading(false);\n          setEmpty(true);\n          setResult([]);\n        }\n      } else {\n        var _res = yield GET_ALLS_ENTREPRENEURS(jwt);\n\n        if (_res && _res.length) {\n          setLoading(false);\n          setResult(_res);\n          setEmpty(false);\n        } else {\n          setLoading(false);\n          setEmpty(true);\n          setResult([]);\n        }\n      }\n    });\n\n    return function getEntrepreneurs() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SearchFilter = function SearchFilter(textSearch) {\n    if (textSearch) {\n      var newData = result.filter(function (item) {\n        var _item$attributes;\n\n        var itemData = item == null ? void 0 : (_item$attributes = item.attributes) == null ? void 0 : _item$attributes.entrepreneurship.toUpperCase();\n        var textData = textSearch.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setResultfilter(newData);\n    } else {\n      setResultfilter(result);\n    }\n  };\n\n  var cards = resultfilter.map(function (item, i) {\n    if (selectedCategory) {\n      return _jsx(EntrepreneurCard, {\n        item: item,\n        isAllCats: true\n      }, \"entrepreneur_card__\" + i);\n    } else {\n      return _jsx(EntrepreneurCard, {\n        item: item,\n        isLarge: true\n      }, \"entrepreneur_card__\" + i);\n    }\n  });\n  return _jsx(View, {\n    style: styles.rootView,\n    children: _jsxs(View, {\n      style: styles.viewContainer,\n      children: [loading && _jsx(ActivityIndicator, {\n        style: {\n          alignSelf: \"center\",\n          marginVertical: 30\n        },\n        size: \"large\",\n        color: GlobalVars.orange\n      }), _jsxs(AnimatedScrollView, {\n        style: styles.stylesCarousel,\n        contentContainerStyle: styles.contentCarousel,\n        children: [!loading && !empty && cards, !loading && empty && _jsx(LabelTextComponent, {\n          text: \"Por el momento esta lista est\\xE1 vac\\xEDa.\",\n          color: GlobalVars.textGrayColor,\n          size: 16\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","GET_ALLS_ENTREPRENEURS","GET_ENTREPRENEURS_FOR_CATEGORY","LabelTextComponent","EntrepreneurCard","GlobalVars","Styles","styles","AnimatedScrollView","Animated","createAnimatedComponent","ScrollView","EntrepreneursGrid","jwt","selectedCategory","filterText","useState","result","setResult","resultfilter","setResultfilter","loading","setLoading","empty","setEmpty","useEffect","getEntrepreneurs","length","SearchFilter","res","textSearch","newData","filter","item","itemData","attributes","entrepreneurship","toUpperCase","textData","indexOf","cards","map","i","rootView","viewContainer","alignSelf","marginVertical","orange","stylesCarousel","contentCarousel","textGrayColor"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/components/organisms/EntrepreneursGrid/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { View, Animated, ScrollView, ActivityIndicator } from \"react-native\";\n\nimport { GET_ALLS_ENTREPRENEURS } from \"../../../mock/entrepreneurs\";\nimport { GET_ENTREPRENEURS_FOR_CATEGORY } from \"../../../mock/entrepreneursByCat\";\n\n/** Import Componentes Custom */\nimport LabelTextComponent from \"../../atoms/LabelText\";\nimport EntrepreneurCard from \"../../molecules/EntrepreneurCard\";\n\n/** Import Global Variables */\nimport GlobalVars from \"../../../global/globalVars\";\n\n/** Import Styles for this Screen */\nimport Styles from \"./style\";\n\nconst styles = Styles;\nconst AnimatedScrollView = Animated.createAnimatedComponent(ScrollView);\n\nexport default function EntrepreneursGrid({\n  jwt = null,\n  selectedCategory = null,\n  filterText = \"\",\n}) {\n  const [result, setResult] = React.useState([]);\n  const [resultfilter, setResultfilter] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n\n  React.useEffect(() => {\n    /** Get products */\n    getEntrepreneurs();\n  }, []);\n\n  React.useEffect(() => {\n    /** Get products */\n    getEntrepreneurs();\n  }, [selectedCategory]);\n\n  React.useEffect(() => {\n    if (result && result.length) {\n      SearchFilter(filterText);\n    } else {\n      setResultfilter([]);\n    }\n  }, [result]);\n\n  React.useEffect(() => {\n    SearchFilter(filterText);\n  }, [filterText]);\n\n  const getEntrepreneurs = async () => {\n    await setLoading(true);\n    if (selectedCategory) {\n      const res = await GET_ENTREPRENEURS_FOR_CATEGORY(jwt, selectedCategory);\n\n      if (res && res.length) {\n        setLoading(false);\n        setResult(res);\n        setEmpty(false);\n      } else {\n        setLoading(false);\n        setEmpty(true);\n        setResult([]);\n      }\n    } else {\n      const res = await GET_ALLS_ENTREPRENEURS(jwt);\n\n      if (res && res.length) {\n        setLoading(false);\n        setResult(res);\n        setEmpty(false);\n      } else {\n        setLoading(false);\n        setEmpty(true);\n        setResult([]);\n      }\n    }\n  };\n\n  const SearchFilter = (textSearch) => {\n    if (textSearch) {\n      const newData = result.filter(function (item) {\n        const itemData = item?.attributes?.entrepreneurship.toUpperCase();\n        const textData = textSearch.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n\n      setResultfilter(newData);\n    } else {\n      setResultfilter(result);\n    }\n  };\n\n  let cards = resultfilter.map((item, i) => {\n    if (selectedCategory) {\n      return (\n        <EntrepreneurCard\n          key={`entrepreneur_card__${i}`}\n          item={item}\n          isAllCats\n        />\n      );\n    } else {\n      return (\n        <EntrepreneurCard key={`entrepreneur_card__${i}`} item={item} isLarge />\n      );\n    }\n  });\n\n  return (\n    <View style={styles.rootView}>\n      <View style={styles.viewContainer}>\n        {loading && (\n          <ActivityIndicator\n            style={{ alignSelf: \"center\", marginVertical: 30 }}\n            size=\"large\"\n            color={GlobalVars.orange}\n          />\n        )}\n        <AnimatedScrollView\n          style={styles.stylesCarousel}\n          contentContainerStyle={styles.contentCarousel}\n        >\n          {!loading && !empty && cards}\n          {!loading && empty && (\n            <LabelTextComponent\n              text=\"Por el momento esta lista está vacía.\"\n              color={GlobalVars.textGrayColor}\n              size={16}\n            />\n          )}\n        </AnimatedScrollView>\n      </View>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}