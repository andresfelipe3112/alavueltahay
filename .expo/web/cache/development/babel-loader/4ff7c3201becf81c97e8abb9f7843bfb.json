{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport GlobalVars from \"../global/globalVars\";\nimport FetchLib from \"../utils/useFetch\";\nexport var GET_ENTREPRENEUR_BY_ID = function () {\n  var _ref = _asyncToGenerator(function* (_JWT, ID) {\n    var URL_API_ENTREPRENEURSHIP = GlobalVars.urlapi + \"/entrepreneurships/\" + ID + \"?populate=%2A\";\n    var response = yield FetchLib.fetchGet(URL_API_ENTREPRENEURSHIP, _JWT);\n    var res = (response == null ? void 0 : response.data) || {};\n    return res;\n  });\n\n  return function GET_ENTREPRENEUR_BY_ID(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["GlobalVars","FetchLib","GET_ENTREPRENEUR_BY_ID","_JWT","ID","URL_API_ENTREPRENEURSHIP","urlapi","response","fetchGet","res","data"],"sources":["/Users/andresfelipepinillameneses/Documents/John 2/front/src/mock/entrepreneurById.js"],"sourcesContent":["import GlobalVars from \"../global/globalVars\";\nimport FetchLib from \"../utils/useFetch\";\n\nexport const GET_ENTREPRENEUR_BY_ID = async (_JWT, ID) => {\n  const URL_API_ENTREPRENEURSHIP = `${GlobalVars.urlapi}/entrepreneurships/${ID}?populate=%2A`;\n  const response = await FetchLib.fetchGet(URL_API_ENTREPRENEURSHIP, _JWT);\n  const res = response?.data || {};\n  return res;\n};\n"],"mappings":";AAAA,OAAOA,UAAP;AACA,OAAOC,QAAP;AAEA,OAAO,IAAMC,sBAAsB;EAAA,6BAAG,WAAOC,IAAP,EAAaC,EAAb,EAAoB;IACxD,IAAMC,wBAAwB,GAAML,UAAU,CAACM,MAAjB,2BAA6CF,EAA7C,kBAA9B;IACA,IAAMG,QAAQ,SAASN,QAAQ,CAACO,QAAT,CAAkBH,wBAAlB,EAA4CF,IAA5C,CAAvB;IACA,IAAMM,GAAG,GAAG,CAAAF,QAAQ,QAAR,YAAAA,QAAQ,CAAEG,IAAV,KAAkB,EAA9B;IACA,OAAOD,GAAP;EACD,CALkC;;EAAA,gBAAtBP,sBAAsB;IAAA;EAAA;AAAA,GAA5B"},"metadata":{},"sourceType":"module"}